services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth_service_api
    user: "${UID}:${GID}"
    volumes:
      - ./:/app
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-auth_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - ENABLE_TRACING=true
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    depends_on:
      - db
      - redis
      - jaeger
    restart: always
    networks:
      - auth_network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8100 --reload

  db:
    image: postgres:15-alpine
    container_name: auth_service_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-auth_db}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    restart: always
    networks:
      - auth_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: auth_service_redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - auth_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: auth_service_jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "14268:14268"
      - "4317:4317"
      - "4318:4318"
    networks:
      - auth_network
    restart: always
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:16686" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: auth_service_nginx
    ports:
      - ${API_PORT:-8100}:8080
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - jaeger
    networks:
      - auth_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3


networks:
  auth_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
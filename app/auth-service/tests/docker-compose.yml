services:
  test-api:
    build:
      context: ../
      dockerfile: Dockerfile
    image: auth-service-api-image
    ports:
      - "9000:8100"
    env_file:
      - ../.env
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy

  test-db:
    image: postgres:15-alpine
    container_name: test_auth_service_db
    volumes:
      - test_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-auth_db}
    ports:
      - ${POSTGRES_PORT:-5433}:5432  # Different port to avoid conflict
    restart: always
    networks:
      - test_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-redis:
    image: redis:7-alpine
    container_name: test_auth_service_redis
    volumes:
      - test_redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT:-6379}:6379
    restart: always
    networks:
      - test_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  tests:
    image: auth-service-api-image
    volumes:
      - ../tests:/tests
      - pip_cache:/root/.cache/pip
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
      test-api:
        condition: service_started
    environment:
      - POSTGRES_HOST=test-db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=auth_db
      - POSTGRES_PORT=5433
      - REDIS_HOST=test-redis
      - REDIS_PORT=6380
      - PYTHONPATH=/tests/modules
    entrypoint: >
      sh -c "
      cd tests/modules &&
      python -m venv /tests/venv &&
      . /tests/venv/bin/activate &&
      pip install --upgrade pip &&
      pip install --no-cache-dir -r requirements.txt &&
      python utils/wait_for_redis.py &&
      pytest src -v"

networks:
  test_network:
    driver: bridge

volumes:
  test_postgres_data:
  test_redis_data:
  pip_cache:
"""add_transaction_table

Revision ID: a1b2c3d4e5f6
Revises: 4185d743b50b
Create Date: 2025-08-08 12:00:00.000000+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "a1b2c3d4e5f6"
down_revision: Union[str, None] = "4185d743b50b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    transaction_type_enum = postgresql.ENUM(
        "CHARGE", "REFUND", name="transaction_type"
    )
    transaction_type_enum.create(op.get_bind(), checkfirst=True)

    transaction_status_enum = postgresql.ENUM(
        "PENDING", "SUCCEEDED", "CANCELED", "REFUNDED", "FAILED", name="transaction_status"
    )
    transaction_status_enum.create(op.get_bind(), checkfirst=True)

    op.create_table(
        "transaction",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("type", transaction_type_enum, nullable=False),
        sa.Column("status", transaction_status_enum, nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("subscription_type", sa.String(length=64), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("provider_payment_id", sa.String(length=128), nullable=True),
        sa.Column("provider_refund_id", sa.String(length=128), nullable=True),
        sa.Column("order_id", sa.String(length=128), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_transaction_user_id"), "transaction", ["user_id"], unique=False)
    op.create_index(
        op.f("ix_transaction_provider_payment_id"),
        "transaction",
        ["provider_payment_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transaction_provider_refund_id"),
        "transaction",
        ["provider_refund_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transaction_provider_refund_id"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_provider_payment_id"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_user_id"), table_name="transaction")
    op.drop_table("transaction")

    transaction_status_enum = postgresql.ENUM(name="transaction_status")
    transaction_type_enum = postgresql.ENUM(name="transaction_type")
    transaction_status_enum.drop(op.get_bind(), checkfirst=True)
    transaction_type_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###



services:
  theatre-admin-service:
    build: &web-theatre
      context: ../admin_panel
    volumes:
      - static_volume:/opt/app/static/
    depends_on:
      theatre-migrations:
        condition: service_completed_successfully
    expose:
      - "8000"
    env_file:
      - ./.env
    entrypoint: /opt/app/run_uwsgi.sh
 
  theatre-nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - static_volume:/data/static/:ro
    depends_on:
      - theatre-admin-service
    ports:
      - "8000:80"

  theatre-db:
    image: postgres:16-alpine
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/dump/movies_database.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
  
  theatre-migrations:
    build: *web-theatre
    command: /opt/app/migrations.sh
    depends_on:
      theatre-db:
        condition: service_healthy
    env_file:
      - ./.env

  theatre-swagger-ui:
    image: swaggerapi/swagger-ui
    expose:
      - "8080"
    ports:
      - "8082:8080"
    volumes:
      - ./swagger/openapi.yaml:/swagger.yaml
    environment:
      SWAGGER_JSON: /swagger.yaml
  
  theatre-etl-service:
    build:  &etl
      context: ../etl/postgres_to_es
    depends_on:
      theatre-db:
        condition: service_healthy
      theatre-redis-service:
        condition: service_started
      theatre-migrations:
        condition: service_completed_successfully
    env_file:
      - ./.env
  
  theatre-es-service:
    image: elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms256m
      - ES_JAVA_OPTS=-Xmx256m
    ports:
      - "9201:9200"
  
  theatre-redis-service:
    image: redis

volumes:
  static_volume:
